rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return request.auth.token.email == 'admin@iitm.ac.in';
    }
    
    function isOwner(userId) {
      return request.auth.token.email == userId;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }
    
    // Subjects collection
    match /subjects/{subjectId} {
      allow read: if true;
      allow write: if isSignedIn() && isAdmin();
    }
    
    // Resources collection
    match /resources/{resourceId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (
        // Allow users to update their own resources
        resource.data.createdBy == request.auth.token.email ||
        // Allow users to like resources (only updating the likes field and likedBy array)
        (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes', 'likedBy']) &&
          request.resource.data.likes == resource.data.likes + 1 &&
          request.resource.data.likedBy.size() == resource.data.likedBy.size() + 1
        ) ||
        // Allow admin to update any resource
        isAdmin()
      );
      allow delete: if isSignedIn() && (resource.data.createdBy == request.auth.token.email || isAdmin());
    }
    
    // Comments collection
    match /comments/{commentId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (resource.data.createdBy == request.auth.token.email || isAdmin());
      allow delete: if isSignedIn() && (resource.data.createdBy == request.auth.token.email || isAdmin());
    }
    
    // Notifications collection - More permissive rules
    match /notifications/{notificationId} {
      // Allow all signed-in users to read all notifications
      // This is a simplification to ensure notifications work
      allow read: if isSignedIn();
      
      // Only admin can create notifications
      allow create: if isSignedIn() && isAdmin();
      
      // Allow updates for marking as read and adding replies
      allow update: if isSignedIn();
      
      // Only admin can delete notifications
      allow delete: if isSignedIn() && isAdmin();
    }
  }
}
