{
  "rules": {
    "notifications": {
      "$user": {
        ".read": "$user === auth.token.email.replace('.', ',')",
        ".write": "$user === auth.token.email.replace('.', ',') || root.child('users').child(auth.uid).child('role').val() === 'admin'"
      }
    },
    "notificationReplies": {
      "$notificationId": {
        ".read": "auth != null",
        ".write": "auth != null"
      }
    },
    "chats": {
      "$chatId": {
        ".read": "auth != null && (data.child('members').child(auth.token.email.replace('.', ',')).exists() || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        ".write": "auth != null && (data.child('members').child(auth.token.email.replace('.', ',')).exists() || !data.exists() || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        "messages": {
          ".read": "auth != null && (root.child('chats').child($chatId).child('members').child(auth.token.email.replace('.', ',')).exists() || root.child('users').child(auth.uid).child('role').val() === 'admin')",
          ".write": "auth != null && (root.child('chats').child($chatId).child('members').child(auth.token.email.replace('.', ',')).exists() || root.child('users').child(auth.uid).child('role').val() === 'admin')"
        }
      }
    },
    "userChats": {
      "$user": {
        ".read": "$user === auth.token.email.replace('.', ',') || root.child('users').child(auth.uid).child('role').val() === 'admin'",
        ".write": "$user === auth.token.email.replace('.', ',') || root.child('users').child(auth.uid).child('role').val() === 'admin'"
      }
    },
    "studySessions": {
      "$uid": {
        ".read": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'",
        ".write": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'"
      }
    },
    "tasks": {
      "$uid": {
        ".read": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'",
        ".write": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'"
      }
    },
    "waterTracking": {
      "$uid": {
        ".read": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'",
        ".write": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'"
      }
    }
  }
}
